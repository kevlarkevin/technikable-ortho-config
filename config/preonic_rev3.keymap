/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BAS_L 0
#define NUM_L 1
#define NAV_L 2
#define ADJ_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };


/ {
    chosen { zmk,matrix-transform = &layout_grid_transform; };

    conditional_layers {
        compatible = "zmk,conditional-layers";
	    tri_layer {
	        if-layers = <NAV_L NUM_L>;
	        then-layer = <ADJ_L>;
	    };
    };
    
    keymap {
        compatible = "zmk,keymap";
        default_layer {
//  -------------------------------------------------------------------------------------------------------------------------
// |  GRAV   |    1    |    2     |    3    |    4    |    5    |    6    |    7    |    8    |    9    |    0    |   BSPC  |
// |  TAB    |    Q    |    W     |    E    |    R    |    T    |    Y    |    U    |    I    |    O    |    P    |   BSLH  |
// |  ESC    |    A    |    S     |    D    |    F    |    G    |    H    |    J    |    K    |    L    |    ;    |   '     |
// | SHIFT   |    Z    |    X     |    C    |    V    |    B    |    N    |    M    |    ,    |    .    |    /    |  SFT_RT |
// |         |         |   LCTL   |   LATL  |  LWIN   |BSPC/NUM | SPC/NAV |   RWIN  |   RALT  |   RCTL  |         |         |
            label = "Base";
            bindings = <
 &kp GRAVE  &kp N1     &kp N2     &kp N3    &kp N4    &kp N5         &kp N6          &kp N7    &kp N8      &kp N9     &kp N0    &kp BSPC
 &kp TAB    &kp Q      &kp W      &kp E     &kp R     &kp T          &kp Y           &kp U     &kp I       &kp O      &kp P     &kp BSLH
 &kp ESC    &kp A      &kp S      &kp D     &kp F     &kp G          &kp H           &kp J     &kp K       &kp L      &kp SEMI  &kp QUOT
 &kp LSHFT  &kp Z      &kp X      &kp C     &kp V     &kp B          &kp N           &kp M     &kp COMMA   &kp DOT    &kp FSLH  &mt RSHIFT RET
 &none      &none      &kp LCTRL  &kp LALT  &kp LWIN  &lt NUM_L BKSP &lt NAV_L SPACE &kp RWIN  &kp RALT    &kp RCTRL  &none     &none
                >;
        };
        num_layer {
//  -------------------------------------------------------------------------------------------------------------------------
// |  GRAV   |    1    |    2     |    3    |    4    |    5    |    6    |    7    |    8    |    9    |    0    |   BSPC  |
// |  GRAV   |    1    |    2     |    3    |    4    |    5    |    6    |    7    |    8    |    9    |    0    |   DEL   |
// |         |    F1   |    F2    |    F3   |    F4   |    F5   |    F6   |    -    |    =    |    [    |    ]    |    \    |
// |         |    F7   |    F8    |    F9   |    F10  |    F11  |    F12  |    #    |    \    |    -    |    =    |         |
// |         |         |          |         |         |         |    *    |         |         |         |         |         |
            label = "Num";
            bindings = <
 &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4   &kp N5      &kp N6   &kp N7     &kp N8        &kp N9            &kp N0             &kp BSPC
 &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4   &kp N5      &kp N6   &kp N7     &kp N8        &kp N9            &kp N0             &kp DEL
 &none      &kp F1  &kp F2  &kp F3  &kp F4   &kp F5      &kp F6   &kp MINUS  &kp EQUAL     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BSLH
 &none      &kp F7  &kp F8  &kp F9  &kp F10  &kp F11     &kp F12  &kp HASH   &kp BSLH      &kp MINUS         &kp EQUAL          &none
 &none      &none   &none   &none   &none    &none       &none    &trans     &kp C_NEXT    &none             &none              &none
                >;
        };
        nav_layer {
//  -------------------------------------------------------------------------------------------------------------------------
// |  TILDE  |    !    |    @     |    #    |    $    |    %    |    ^    |    &    |    *    |    (    |    )    |   BSPC  |
// |  TILDE  |    !    |    @     |    #    |    $    |    %    |    ^    |    &    |    UP   |    (    |    )    |   DEL   |
// |         |    F1   |    F2    |    F3   |    F4   |    F5   |    F6   |   LEFT  |   DOWN  |  RIGHT  |    ]    |    |    |
// |         |    F7   |    F8    |    F9   |    F10  |    F11  |    F12  |  PG_DN  |  PG_UP  |   HOME  |  END    |         |
// |         |         |          |         |         |         |    *    |         |         |         |         |         |
            label = "Nav";
            bindings = <
 &kp LS(GRAVE)  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)        &kp LS(N0)         &kp BSPC
 &kp LS(GRAVE)  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp LS(N7)  &kp UP      &kp LS(N9)        &kp LS(N0)         &kp DEL
 &none          &kp F1      &kp F2      &kp F3      &kp F4      &kp F5      &kp F6      &kp LEFT    &kp DOWN    &kp RIGHT         &kp RIGHT_BRACKET  &kp PIPE
 &none          &kp F7      &kp F8      &kp F9      &kp F10     &kp F11     &kp F12     &kp PG_DN   &kp PG_UP   &kp HOME          &kp END            &none
 &none          &none       &none       &none       &trans      &none       &none       &none       &none       &none             &none              &none
                >;
        };
        adj_layer {
//  -------------------------------------------------------------------------------------------------------------------------
// |  TILDE  |    !    |    @     |    #    |    $    |    %    |    ^    |    &    |    *    |    (    |    )    |   BSPC  |
// |  TILDE  |    !    |    @     |    #    |    $    |    %    |    ^    |    &    |    *    |    (    |    )    |   DEL   |
// |         |    F1   |    F2    |    F3   |    F4   |    F5   |    F6   |    -    |    +    |    [    |    ]    |    |    |
// |         |    F7   |    F8    |    F9   |    F10  |   F11   |    F12  |         |  VOL-   |   VOL+  |         |         |
// |         |         |          |         |         |   n/a   |   n/a   |         |         |         |         |         |
            label = "Adj";
            bindings = <
 &kp LS(GRAVE)  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)        &kp LS(N0)         &kp BSPC
 &kp LS(GRAVE)  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)        &kp LS(N0)         &kp DEL
 &none          &kp F1      &kp F2      &kp F3      &kp F4      &kp F5      &kp F6      &kp MINUS   &kp PLUS    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE
 &none          &kp F7      &kp F8      &kp F9      &kp F10     &kp F11     &kp F12     &none       &kp C_VOL_DN &kp C_VOL_UP     &none              &none
 &none          &none       &none       &none       &trans      &none       &none       &none       &none       &none             &none              &none
                >;
    };
};
